{"version":3,"sources":["Pages/Register.page.jsx","Pages/AddBook.page.jsx","store/creators/actionCreators.js","store/actions/actionTypes.js","components/BootstrapCardNoAuth.component.jsx","Pages/Fiction.page.jsx","Pages/Nonfiction.page.jsx","Pages/AllGenres.page.jsx","Layout/Header.layout.js","Layout/Footer.layout.js","Layout/BaseLayout.layout.js","Pages/Edit.page.jsx","components/BootstrapCardCart.component.jsx","Pages/Cart.page.jsx","utils/Auth.js","Pages/Login.page.jsx","Pages/HomeNoAuth.page.jsx","Pages/Signout.page.jsx","components/requireAuth.js","store/reducers/cart.js","store/reducers/login.js","store/reducers/books.js","store/reducers/counter.js","index.js","Layout/logo-bootstrap.svg"],"names":["AddUser","props","useState","user","setUser","handleRegister","e","target","name","value","type","placeholder","onChange","required","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","response","console","log","alert","message","history","push","AddBook","book","setBook","handleAddBook","removeCartBooks","cartBooks","payload","authenticated","auth","connect","state","isLoggedIn","loginRed","dispatch","onIncrement","onDecrement","onAddCartBooks","actionCreators","onRemoveCartBooks","editLink","books","id","Card","Img","style","width","variant","src","imageURL","alt","Body","Title","title","Text","genre","publisher","year","Footer","className","Nav","Link","cartBook","to","fetchBooks","Fiction","setBooks","result","useEffect","CardDeck","map","bookLoop","index","key","Nonfiction","AllGenres","counter","counterRed","Navbar","bg","Brand","logo","height","NavDropdown","Item","Button","Badge","BaseLayout","children","Edit","handleUpdateBook","match","params","cartRed","setAuthenticationHeader","token","axios","defaults","common","onAuthenticated","username","password","guestUser","handleLogin","post","data","success","localStorage","setItem","HomeNoAuth","ComposedComponent","Authenticate","this","Component","initialState","reducer","action","concat","filter","rootReducer","combineReducers","cartReducer","loginReducer","booksRed","booksReducer","counterReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getItem","ReactDOM","render","StrictMode","exact","path","component","requireAuth","Register","Cart","Login","Signout","document","getElementById","module","exports"],"mappings":"2MAuDeA,MAhDf,SAAiBC,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,KAGtB,SAASC,EAAeC,GACtBF,EAAQ,2BACHD,GADE,kBAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAoB9B,OACE,6BACE,iDACA,2BACEC,KAAK,OACLC,YAAY,WACZH,KAAK,WACLI,SAAUP,EACVQ,UAAQ,IAEV,2BACEH,KAAK,WACLC,YAAY,WACZH,KAAK,WACLI,SAAUP,EACVQ,UAAQ,IAEV,4BAAQC,QAjCZ,WACEC,MAAM,4DAA6D,CACjEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUjB,KAEpBkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZG,MAAMH,EAASI,SACf3B,EAAM4B,QAAQC,KAAK,eAqBrB,mBC+BSC,MA7Ef,SAAiB9B,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACf8B,EADe,KACTC,EADS,KAgBtB,SAASC,EAAc5B,GACrB2B,EAAQ,2BACHD,GADE,kBAEJ1B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAQ9B,OACE,6BACE,2BACEC,KAAK,OACLC,YAAY,WACZH,KAAK,kBACLI,SAAUsB,IAEZ,2BACExB,KAAK,OACLC,YAAY,QACZH,KAAK,eACLI,SAAUsB,IAEZ,2BACExB,KAAK,OACLC,YAAY,QACZH,KAAK,eACLI,SAAUsB,IAEZ,2BACExB,KAAK,OACLC,YAAY,YACZH,KAAK,mBACLI,SAAUsB,IAEZ,2BACExB,KAAK,OACLC,YAAY,OACZH,KAAK,cACLI,SAAUsB,IAEZ,4BAAQpB,QApCZ,WApBEC,MAAM,4DAA6D,CACjEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUY,KAEpBX,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLG,MAAMH,EAASI,SACf3B,EAAM4B,QAAQC,KAAK,cA8CrB,c,gBCvBOK,EAAkB,SAACC,GAC9B,MAAO,CACL1B,KCrC2B,kBDsC3B2B,QAASD,IAIAE,EAAgB,SAACC,GAC5B,MAAO,CACL7B,KC3CyB,gBD4CzBD,MAAO8B,I,QEyCIC,eAhBS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,SAASD,eAIJ,SAACE,GAC1B,MAAO,CACLC,YAAa,kBAAMD,EFhFd,CACLlC,KCJe,SCoFfoC,YAAa,kBAAMF,EF3Ed,CACLlC,KCTkB,YCoFlBqC,eAAgB,SAACX,GAAD,OACdQ,EFrDsB,SAACR,GAC3B,MAAO,CACL1B,KC/BwB,eDgCxB2B,QAASD,GEkDEY,CAA4BZ,KACvCa,kBAAmB,SAACb,GAAD,OACjBQ,EAASI,EAA+BZ,QAG/BI,EApFa,SAACvC,GAC3B,IAsBMiD,EAAW,SAAWjD,EAAMkD,MAAMC,GAExC,OACE,oCACE,6BACE,kBAACC,EAAA,EAAD,CAAMD,GAAInD,EAAMkD,MAAMC,IACpB,kBAACC,EAAA,EAAKC,IAAN,CACEC,MAAO,CAAEC,MAAO,KAChBC,QAAQ,MACRC,IAAKzD,EAAMkD,MAAMQ,SACjBC,IAAI,UAEN,kBAACP,EAAA,EAAKQ,KAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,KAAa7D,EAAMkD,MAAMY,OACzB,kBAACV,EAAA,EAAKW,KAAN,KACG/D,EAAMkD,MAAMc,MACb,6BACChE,EAAMkD,MAAMe,UACb,6BACCjE,EAAMkD,MAAMgB,OAGhBlE,EAAMyC,WACL,kBAACW,EAAA,EAAKe,OAAN,KACE,2BAAOC,UAAU,cACf,kBAACC,EAAA,EAAIC,KAAL,KACE,4BAAQzD,QAhCE,WACxB,IAAI0D,EAAWvE,EAAMkD,MACrBlD,EAAM4C,cACN5C,EAAM8C,eAAeyB,KA6BP,gBAEF,kBAAC,gBAAD,CAAeC,GAAIvB,GACjB,kBAACoB,EAAA,EAAIC,KAAL,KACE,+CAGJ,kBAACD,EAAA,EAAIC,KAAL,KACE,4BAAQzD,QAxDL,WACjB,IAAIsC,EAAKnD,EAAMkD,MAAMC,GACrBrC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEgC,GAAIA,MAE1B/B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLG,MAAMH,EAASI,SACf3B,EAAMyE,kBA4CI,aAIJ,W,QC1BCC,MApCf,SAAiB1E,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACfiD,EADe,KACRyB,EADQ,KAElBF,EAAa,WACf3D,MAAM,4DACHM,MAAK,SAACG,GAAD,OAAcA,EAASD,UAC5BF,MAAK,SAACwD,GACLD,EAASC,OAMf,OAHAC,qBAAU,WACRJ,MACC,IAED,oCACE,yBAAKL,UAAU,iBACb,kBAACU,EAAA,EAAD,KACG5B,EAAM6B,KAAI,SAACC,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACL/B,MAAO8B,EACPP,WAAYA,WCgBbU,MArCf,SAAoBnF,GAAQ,IAAD,EACCC,mBAAS,IADV,mBAClBiD,EADkB,KACXyB,EADW,KAErBF,EAAa,WACf3D,MAAM,+DACHM,MAAK,SAACG,GAAD,OAAcA,EAASD,UAC5BF,MAAK,SAACwD,GACLD,EAASC,OAMf,OAHAC,qBAAU,WACRJ,MACC,IAED,oCACE,yBAAKL,UAAU,iBACb,kBAACU,EAAA,EAAD,KACG5B,EAAM6B,KAAI,SAACC,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACL/B,MAAO8B,EACPP,WAAYA,WCSbW,MA/Bf,WAAsB,IAAD,EACOnF,mBAAS,IADhB,mBACZiD,EADY,KACLyB,EADK,KAEfF,EAAa,WACf3D,MAAM,qDACHM,MAAK,SAACG,GAAD,OAAcA,EAASD,UAC5BF,MAAK,SAACwD,GACLD,EAASC,OAMf,OAHAC,qBAAU,WACRJ,MACC,IAED,oCACE,yBAAKL,UAAU,iBACb,kBAACU,EAAA,EAAD,KACG5B,EAAM6B,KAAI,SAACC,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACL/B,MAAO8B,EACPP,WAAYA,W,iDCkFblC,eAhBS,SAACC,GACvB,MAAO,CAELC,WAAYD,EAAME,SAASD,WAC3B4C,QAAS7C,EAAM8C,WAAWD,WAYU,KAAzB9C,EAlGA,SAACvC,GACd,OACE,kBAACuF,EAAA,EAAD,CAAQC,GAAG,OAAOhC,QAAQ,QACxB,kBAAC,gBAAD,CAAegB,GAAG,KAChB,kBAACe,EAAA,EAAOE,MAAR,KACE,yBACEhC,IAAKiC,IACLnC,MAAM,KACNoC,OAAO,KACPvB,UAAU,2BACVT,IAAI,2BAIV,kBAACU,EAAA,EAAD,CAAKD,UAAU,WACZpE,EAAMyC,WACL,kBAACmD,EAAA,EAAD,CAAa9B,MAAM,kBAAkBX,GAAG,sBACtC,kBAAC,gBAAD,CAAeqB,GAAG,YAChB,kBAACoB,EAAA,EAAYC,KAAb,iBAEF,kBAAC,gBAAD,CAAerB,GAAG,eAChB,kBAACoB,EAAA,EAAYC,KAAb,oBAEF,kBAAC,gBAAD,CAAerB,GAAG,cAChB,kBAACoB,EAAA,EAAYC,KAAb,0BAOF,KACJ,kBAAC,gBAAD,CAAerB,GAAG,KAChB,kBAACH,EAAA,EAAIC,KAAL,cAWDtE,EAAMyC,WACL,kBAAC,gBAAD,CAAe+B,GAAG,YAChB,kBAACH,EAAA,EAAIC,KAAL,kBAEA,KACHtE,EAAMyC,WAAa,KAClB,kBAAC,gBAAD,CAAe+B,GAAG,UAChB,kBAACH,EAAA,EAAIC,KAAL,eAGHtE,EAAMyC,WAAa,KAClB,kBAAC,gBAAD,CAAe+B,GAAG,aAChB,kBAACH,EAAA,EAAIC,KAAL,kBAGHtE,EAAMyC,WACL,kBAAC,gBAAD,CAAe+B,GAAG,YAChB,kBAACH,EAAA,EAAIC,KAAL,iBAEA,MAELtE,EAAMyC,WACL,kBAAC,gBAAD,CAAe+B,GAAG,SAChB,kBAACsB,EAAA,EAAD,CAAQtC,QAAQ,gBAAhB,OAEE,kBAACuC,EAAA,EAAD,KAAQ/F,EAAMqF,SACd,0BAAMjB,UAAU,WAAhB,mBAGF,SC7EKD,EAJA,WACb,OAAO,sCCYM6B,EAVI,SAAChG,GAClB,OACE,oCACE,kBAAC,EAAD,MACCA,EAAMiG,SACP,kBAAC,EAAD,QCkESC,MAzEf,SAAclG,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACZ8B,EADY,KACNC,EADM,KAkBnB,SAASmE,EAAiB9F,GACxB2B,EAAQ,2BACHD,GADE,kBAEJ1B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAe9B,OAXAqE,qBAAU,WACR/D,MACE,yDACEd,EAAMoG,MAAMC,OAAOlD,IAEpB/B,MAAK,SAACG,GAAD,OAAcA,EAASD,UAC5BF,MAAK,SAACwD,GACL5C,EAAQ4C,QAEX,CAAC5E,EAAMoG,MAAMC,OAAOlD,KAGrB,6BACE,2BACE1C,KAAK,OACLD,MAAOuB,EAAK2B,SACZnD,KAAK,WACLI,SAAUwF,IAEZ,2BACE1F,KAAK,OACLD,MAAOuB,EAAK+B,MACZvD,KAAK,QACLI,SAAUwF,IAEZ,2BACE1F,KAAK,OACLD,MAAOuB,EAAKiC,MACZzD,KAAK,QACLI,SAAUwF,IAEZ,2BACE1F,KAAK,OACLD,MAAOuB,EAAKkC,UACZ1D,KAAK,YACLI,SAAUwF,IAEZ,2BACE1F,KAAK,OACLD,MAAOuB,EAAKmC,KACZ3D,KAAK,OACLI,SAAUwF,IAEZ,4BAAQtF,QAjEZ,WACEC,MAAM,wDAAyD,CAC7DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUY,KAEpBX,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLG,MAAMH,EAASI,SACf3B,EAAM4B,QAAQC,KAAK,cAsDrB,iBCNSU,eAbS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,SAASD,eAIJ,SAACE,GAC1B,MAAO,CACLE,YAAa,kBAAMF,EVnDd,CACLlC,KCTkB,YS4DlBuC,kBAAmB,SAACb,GAAD,OACjBQ,EAASI,EAA+BZ,QAG/BI,EA3DW,SAACvC,GAQzB,OACE,oCACE,6BACE,kBAACoD,EAAA,EAAD,CAAMD,GAAInD,EAAMkD,MAAMC,IACpB,kBAACC,EAAA,EAAKC,IAAN,CACEC,MAAO,CAAEC,MAAO,KAChBC,QAAQ,MACRC,IAAKzD,EAAMkD,MAAMQ,SACjBC,IAAI,UAEN,kBAACP,EAAA,EAAKQ,KAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,KAAa7D,EAAMkD,MAAMY,OACzB,kBAACV,EAAA,EAAKW,KAAN,KACG/D,EAAMkD,MAAMc,MACb,6BACChE,EAAMkD,MAAMe,UACb,6BACCjE,EAAMkD,MAAMgB,OAIhBlE,EAAMyC,WACL,kBAACW,EAAA,EAAKe,OAAN,KACE,2BAAOC,UAAU,cACf,kBAACC,EAAA,EAAIC,KAAL,KACE,4BAAQzD,QAhCK,WAC3B,IAAI0D,EAAWvE,EAAMkD,MACrB1B,QAAQC,IAAIzB,GACZA,EAAM6C,cACN7C,EAAMgD,kBAAkBuB,KA4BV,uBAMJ,WCYd,IAkBehC,eAlBS,SAACC,GACvB,MAAO,CACLL,UAAWK,EAAM8D,QAAQnE,aAgBW,KAAzBI,EAlEf,SAAmBvC,GAejB,OACE,oCACE,yBAAKoE,UAAU,iBACb,kBAACU,EAAA,EAAD,KACG9E,EAAMmC,UAAU4C,KAAI,SAACC,EAAUC,GAC9B,OAAO,kBAAC,EAAD,CAAmBC,IAAKD,EAAO/B,MAAO8B,a,iBC3BlD,SAASuB,EAAwBC,GAClCA,EACFC,IAAMC,SAAS1F,QAAQ2F,OAAvB,+BAA2DH,UAEpDC,IAAMC,SAAS1F,QAAQ2F,OAAvB,cC2FX,IAMepE,cAAQ,MANI,SAACI,GAC1B,MAAO,CACLiE,gBAAiB,kBAAMjE,EAASI,GAA6B,QAIlDR,EAjGf,SAAevC,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,OAEAF,mBAAS,CAC3B4G,SAAU,QACVC,SAAU,SAFLC,EAFa,oBAOpB,SAASC,EAAY3G,GACnBF,EAAQ,2BACHD,GADE,kBAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAsD9B,OACE,6BACE,6BACE,0CACA,2BACEC,KAAK,OACLC,YAAY,WACZH,KAAK,WACLI,SAAUqG,EACVpG,UAAQ,IAEV,2BACEH,KAAK,WACLC,YAAY,WACZH,KAAK,WACLI,SAAUqG,EACVpG,UAAQ,IAEV,4BAAQC,QA5Cd,WACE4F,IACGQ,KAAK,6DAA8D,CAClEJ,SAAU3G,EAAK2G,SACfC,SAAU5G,EAAK4G,WAEhB1F,MAAK,SAACG,GACL,GAAIA,EAAS2F,KAAKC,QAAS,CACzB,IAAMX,EAAQjF,EAAS2F,KAAKV,MAC5BY,aAAaC,QAAQ,eAAgBb,GACrCD,EAAwBC,GACxBhF,QAAQC,IAAI+E,GACZxG,EAAM4G,iBAAgB,GACtBlF,MAAMH,EAAS2F,KAAKvF,SACpB3B,EAAM4B,QAAQC,KAAK,UAEnBH,MAAMH,EAAS2F,KAAKvF,SACpBD,MAAM,mBACNvB,EAAQ,2BACHD,GADE,IAEL4G,SAAU,WAwBd,UAEF,6BACE,4BAAQjG,QAvEd,WACEC,MAAM,yDAA0D,CAC9DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4F,KAEpB3F,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACDA,EAAS4F,SACXnH,EAAM4G,iBAAgB,GACtBlF,MAAMH,EAASI,SACf3B,EAAM4B,QAAQC,KAAK,OAEnBH,MAAMH,EAASI,SACfxB,EAAQ,2BACHD,GADE,IAEL4G,SAAU,YAqDd,oBClCOQ,MAnDf,WAAuB,IAAD,EACMrH,mBAAS,IADf,mBACbiD,EADa,KACNyB,EADM,KAGhBF,EAAa,WACf3D,MAAM,qDACHM,MAAK,SAACG,GAAD,OAAcA,EAASD,UAC5BF,MAAK,SAACwD,GAELD,EAASC,OAQf,OAHAC,qBAAU,WACRJ,MACC,IAED,oCACE,yBAAKL,UAAU,iBACb,kBAACU,EAAA,EAAD,KACG5B,EAAM6B,KAAI,SAACC,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACL/B,MAAO8B,EACPP,WAAYA,WChB5B,IAMelC,cAAQ,MANI,SAACI,GAC1B,MAAO,CACLiE,gBAAiB,kBAAMjE,EAASI,GAA6B,QAIlDR,EAjBf,SAAiBvC,GAIf,OAFAA,EAAM4G,iBAAgB,GAGpB,6BACE,uD,gCCLS,WAAUW,GAAoB,IACrCC,EADoC,kDAExC,WAAYxH,GAAQ,IAAD,8BAIa,KAH9B,cAAMA,IAGGA,MAAMyC,YAEb,EAAKzC,MAAM4B,QAAQC,KAAK,KANT,EAFqB,qDAYtC,OAAO,kBAAC0F,EAAsBE,KAAKzH,WAZG,GACf0H,aAmB3B,OAAOnF,aALiB,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAMC,cAGfF,CAAyBiF,ICvB5BG,EAAe,CACnBxF,UAAW,IAwBEyF,EArBC,WAAmC,IAAlCpF,EAAiC,uDAAzBmF,EAAcE,EAAW,uCAChD,OAAQA,EAAOpH,MACb,IhBJwB,egBKtB,OAAO,2BACF+B,GADL,IAEEL,UAAWK,EAAML,UAAU2F,OAAOD,EAAOzF,WAG7C,IhBT2B,kBgBUzB,OAAO,2BACFI,GADL,IAEEL,UAAWK,EAAML,UAAU4F,QAAO,SAAChG,GACjC,OAAOA,EAAKoB,KAAO0E,EAAOzF,QAAQe,QAIxC,QACE,OAAOX,ICrBPmF,EAAe,CACnBlF,YAAY,GAgBCmF,EAbC,WAAmC,IAAlCpF,EAAiC,uDAAzBmF,EAAcE,EAAW,uCAChD,OAAQA,EAAOpH,MACb,IjBFyB,gBiBGvB,OAAO,2BACF+B,GADL,IAEEC,WAAYoF,EAAOrH,QAGvB,QACE,OAAOgC,ICbPmF,GAAe,CACnBzE,MAAO,IAgBM0E,GAbC,WAAmC,IAAlCpF,EAAiC,uDAAzBmF,GAAcE,EAAW,uCAChD,OAAQA,EAAOpH,MACb,IlBN0B,iBkBOxB,OAAO,2BACF+B,GADL,IAEEU,MAAOV,EAAMU,MAAM4E,OAAOD,EAAOzF,WAGrC,QACE,OAAOI,ICbPmF,GAAe,CACnBtC,QAAS,GAsBIuC,GAnBC,WAAmC,IAAlCpF,EAAiC,uDAAzBmF,GAAcE,EAAW,uCAChD,OAAQA,EAAOpH,MACb,InBRe,MmBSb,OAAO,2BACF+B,GADL,IAEE6C,QAAS7C,EAAM6C,QAAU,IAG7B,InBbkB,SmBchB,OAAO,2BACF7C,GADL,IAEE6C,QAAS7C,EAAM6C,QAAU,IAG7B,QACE,OAAO7C,ICIPwF,GAAcC,YAAgB,CAClC3B,QAAS4B,EACTxF,SAAUyF,EACVC,SAAUC,GACV/C,WAAYgD,KAGRC,GAAmBC,OAAOC,sCAAwCC,IAElEC,GAAQC,YACZZ,GACAO,GAAiBM,YAAgBC,OAInCvC,EADca,aAAa2B,QAAQ,iBAGnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,gBAAD,KACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,WAAWC,UAAWC,EAAYxH,KACpD,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAYpD,KAGrD,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,YAAYC,UAAWE,IACzC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,WAAWC,UAAW3E,IACxC,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,cAAcC,UAAWlE,IAC3C,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,aAAaC,UAAWjE,IAC1C,kBAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,QAAQC,UAAWC,EAAYE,KAEjD,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,SAASC,UAAWI,IACtC,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,QAAQC,UAAW/B,IACrC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,WAAWC,UAAWK,SAMlDC,SAASC,eAAe,U,mBCnE1BC,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.7883da86.chunk.js","sourcesContent":["// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import * as actionCreators from \"../store/creators/actionCreators\";\n// import BootstrapCard from \"./components/BootstrapCard.component\";\n// import Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\n\nfunction AddUser(props) {\n  const [user, setUser] = useState({});\n\n  function handleRegister(e) {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleRegisterPost() {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        alert(response.message);\n        props.history.push(\"/Login\");\n      });\n  }\n\n  return (\n    <div>\n      <h1>Registration Page</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        name=\"username\"\n        onChange={handleRegister}\n        required\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        onChange={handleRegister}\n        required\n      />\n      <button onClick={handleRegisterPost}>Register User</button>\n    </div>\n  );\n}\n\nexport default AddUser;\n//const [username, setUsername] = useState(\"\");\n// const[password, setPassword] = useState(\"\")\n\n// function handleRegister(e) {\n//   setUsername(e.target.value);\n// }\n\n// function handleRegisterPost() {\n//   fetchAddUser();\n// }\n\n// const handleLoginPost = () => {\n//   console.log(username);\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/login\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(username),\n//   })\n//     .then((res) => res.json())\n//     .then((response) => {\n//       alert(response.message);\n//       // props.history.push(\"/\");\n//     });\n//   props.onAuthenticated(true);\n// };\n","import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import * as actionCreators from \"../store/creators/actionCreators\";\n\nfunction AddBook(props) {\n  const [book, setBook] = useState({});\n  let fetchAddBook = () => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/add-book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(book),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        alert(response.message);\n        props.history.push(\"/Home\");\n      });\n  };\n  function handleAddBook(e) {\n    setBook({\n      ...book,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleAddBookPost() {\n    fetchAddBook();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"imageURL\"\n        name=\"imageURLTextBox\"\n        onChange={handleAddBook}\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        name=\"titleTextBox\"\n        onChange={handleAddBook}\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"Genre\"\n        name=\"genreTextBox\"\n        onChange={handleAddBook}\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"Publisher\"\n        name=\"publisherTextBox\"\n        onChange={handleAddBook}\n      ></input>\n      <input\n        type=\"text\"\n        placeholder=\"Year\"\n        name=\"yearTextBox\"\n        onChange={handleAddBook}\n      ></input>\n      <button onClick={handleAddBookPost}>Add Book</button>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     // global state counter is now available in property called ctr\n//     totalCartItems: state.counterRed.counter,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onIncrement: () => dispatch(actionCreators.incrementCounter()),\n//     onDecrement: () => dispatch(actionCreators.decrementCounter()),\n//   };\n// };\nexport default AddBook;\n//export default connect(mapStateToProps, null)(AddBook);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nexport const incrementCounter = () => {\n  return {\n    type: actionTypes.ADD,\n  };\n};\n\nexport const decrementCounter = () => {\n  return {\n    type: actionTypes.REMOVE,\n  };\n};\n\nexport const booksLoaded = () => {\n  return (dispatch) => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/api-books\")\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        dispatch({ type: actionTypes.BOOKSLOADED, payload: json });\n\n        // props.onGlobalBooksLoaded(json);\n      });\n  };\n};\n\nexport const addGlobalBooks = (books) => {\n  return {\n    type: actionTypes.ADDGLOBALBOOKS,\n    payload: books,\n  };\n};\nexport const addCartBooks = (cartBooks) => {\n  return {\n    type: actionTypes.ADDCARTBOOKS,\n    payload: cartBooks,\n  };\n};\n\nexport const removeCartBooks = (cartBooks) => {\n  return {\n    type: actionTypes.REMOVECARTBOOKS,\n    payload: cartBooks,\n  };\n};\n\nexport const authenticated = (auth) => {\n  return {\n    type: actionTypes.AUTHENTICATED,\n    value: auth,\n  };\n};\n","export const ADD = \"ADD\";\nexport const REMOVE = \"REMOVE\";\nexport const ADDGLOBALBOOKS = \"ADDGLOBALBOOKS\";\nexport const BOOKSLOADED = \"BOOKSLOADED\";\nexport const ADDCARTBOOKS = \"ADDCARTBOOKS\";\nexport const REMOVECARTBOOKS = \"REMOVECARTBOOKS\";\nexport const AUTHENTICATED = \"AUTHENTICATED\";\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/creators/actionCreators\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst BootstrapCardNoAuth = (props) => {\n  const deletePost = () => {\n    let id = props.books.id;\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/delete\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        alert(response.message);\n        props.fetchBooks();\n      });\n  };\n\n  const handleAddCartBook = () => {\n    let cartBook = props.books;\n    props.onIncrement();\n    props.onAddCartBooks(cartBook);\n  };\n\n  const editLink = \"/Edit/\" + props.books.id;\n\n  return (\n    <>\n      <div>\n        <Card id={props.books.id}>\n          <Card.Img\n            style={{ width: 200 }}\n            variant=\"top\"\n            src={props.books.imageURL}\n            alt=\"image\"\n          />\n          <Card.Body>\n            <Card.Title>{props.books.title}</Card.Title>\n            <Card.Text>\n              {props.books.genre}\n              <br />\n              {props.books.publisher}\n              <br />\n              {props.books.year}\n            </Card.Text>\n          </Card.Body>\n          {props.isLoggedIn ? (\n            <Card.Footer>\n              <small className=\"text-muted\">\n                <Nav.Link>\n                  <button onClick={handleAddCartBook}>Add To Cart</button>\n                </Nav.Link>\n                <LinkContainer to={editLink}>\n                  <Nav.Link>\n                    <button>Edit Book</button>\n                  </Nav.Link>\n                </LinkContainer>\n                <Nav.Link>\n                  <button onClick={deletePost}>Delete</button>\n                </Nav.Link>\n              </small>\n            </Card.Footer>\n          ) : null}\n        </Card>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.loginRed.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrement: () => dispatch(actionCreators.incrementCounter()),\n    onDecrement: () => dispatch(actionCreators.decrementCounter()),\n    onAddCartBooks: (cartBooks) =>\n      dispatch(actionCreators.addCartBooks(cartBooks)),\n    onRemoveCartBooks: (cartBooks) =>\n      dispatch(actionCreators.removeCartBooks(cartBooks)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BootstrapCardNoAuth);\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapCardNoAuth from \"../components/BootstrapCardNoAuth.component\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n// import { connect } from \"react-redux\";\n// import * as actionCreators from \"../store/creators/actionCreators\";\n\nfunction Fiction(props) {\n  const [books, setBooks] = useState([]);\n  let fetchBooks = () => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/fiction\")\n      .then((response) => response.json())\n      .then((result) => {\n        setBooks(result);\n      });\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return (\n    <>\n      <div className=\"App container\">\n        <CardDeck>\n          {books.map((bookLoop, index) => {\n            return (\n              <BootstrapCardNoAuth\n                key={index}\n                books={bookLoop}\n                fetchBooks={fetchBooks}\n              />\n            );\n          })}\n        </CardDeck>\n      </div>\n    </>\n  );\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     // global state counter is now available in property called books\n//     books: state.booksRed.books,\n//   };\n// };\nexport default Fiction;\n// export default connect(mapStateToProps, null)(Fiction);\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapCardNoAuth from \"../components/BootstrapCardNoAuth.component\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n// import { connect } from \"react-redux\";\n// import * as actionCreators from \"../store/creators/actionCreators\";\n\nfunction Nonfiction(props) {\n  const [books, setBooks] = useState([]);\n  let fetchBooks = () => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/nonfiction\")\n      .then((response) => response.json())\n      .then((result) => {\n        setBooks(result);\n      });\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return (\n    <>\n      <div className=\"App container\">\n        <CardDeck>\n          {books.map((bookLoop, index) => {\n            return (\n              <BootstrapCardNoAuth\n                key={index}\n                books={bookLoop}\n                fetchBooks={fetchBooks}\n              />\n            );\n          })}\n        </CardDeck>\n      </div>\n    </>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     // global state counter is now available in property called books\n//     books: state.booksRed.books,\n//   };\n// };\nexport default Nonfiction;\n// export default connect(mapStateToProps, null)(Nonfiction);\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapCardNoAuth from \"../components/BootstrapCardNoAuth.component\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n// import { LinkContainer } from \"react-router-bootstrap\";\n\nfunction AllGenres() {\n  const [books, setBooks] = useState([]);\n  let fetchBooks = () => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/\")\n      .then((response) => response.json())\n      .then((result) => {\n        setBooks(result);\n      });\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return (\n    <>\n      <div className=\"App container\">\n        <CardDeck>\n          {books.map((bookLoop, index) => {\n            return (\n              <BootstrapCardNoAuth\n                key={index}\n                books={bookLoop}\n                fetchBooks={fetchBooks}\n              />\n            );\n          })}\n        </CardDeck>\n      </div>\n    </>\n  );\n}\n\nexport default AllGenres;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport logo from \"./logo-bootstrap.svg\";\nimport { connect } from \"react-redux\";\n\nconst Header = (props) => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <img\n            src={logo}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          />\n        </Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        {props.isLoggedIn ? (\n          <NavDropdown title=\"Filter By Genre\" id=\"basic-nav-dropdown\">\n            <LinkContainer to=\"/Fiction\">\n              <NavDropdown.Item>Fiction</NavDropdown.Item>\n            </LinkContainer>\n            <LinkContainer to=\"/Nonfiction\">\n              <NavDropdown.Item>Nonfiction</NavDropdown.Item>\n            </LinkContainer>\n            <LinkContainer to=\"/AllGenres\">\n              <NavDropdown.Item>View All Genres</NavDropdown.Item>\n            </LinkContainer>\n            {/* <NavDropdown.Divider />\n            <LinkContainer to=\"/\">\n              <NavDropdown.Item>View All Genres</NavDropdown.Item>\n            </LinkContainer> */}\n          </NavDropdown>\n        ) : null}\n        <LinkContainer to=\"/\">\n          <Nav.Link>Home</Nav.Link>\n        </LinkContainer>\n        {/* {props.isLoggedIn ? (\n          <LinkContainer to=\"/Home\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <LinkContainer to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n        )} */}\n        {props.isLoggedIn ? (\n          <LinkContainer to=\"/AddBook\">\n            <Nav.Link>Add Book</Nav.Link>\n          </LinkContainer>\n        ) : null}\n        {props.isLoggedIn ? null : (\n          <LinkContainer to=\"/Login\">\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>\n        )}\n        {props.isLoggedIn ? null : (\n          <LinkContainer to=\"/Register\">\n            <Nav.Link>Add User</Nav.Link>\n          </LinkContainer>\n        )}\n        {props.isLoggedIn ? (\n          <LinkContainer to=\"/Signout\">\n            <Nav.Link>Signout</Nav.Link>\n          </LinkContainer>\n        ) : null}\n      </Nav>\n      {props.isLoggedIn ? (\n        <LinkContainer to=\"/Cart\">\n          <Button variant=\"outline-info\">\n            Cart\n            <Badge>{props.counter}</Badge>\n            <span className=\"sr-only\">items in cart</span>\n          </Button>\n        </LinkContainer>\n      ) : null}\n      {/* <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-info\">Search</Button>\n        </Form> */}\n    </Navbar>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    // books: state.booksRed.books,\n    isLoggedIn: state.loginRed.isLoggedIn,\n    counter: state.counterRed.counter,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onIncrement: () => dispatch(actionCreators.incrementCounter()),\n//     onDecrement: () => dispatch(actionCreators.decrementCounter()),\n//     onAuthenticated: () => dispatch(actionCreators.authenticated()),\n//     onAddGlobalBooks: (books) => dispatch(actionCreators.addGlobalBooks(books)),\n//   };\n// };\nexport default connect(mapStateToProps, null)(Header);\n\n// {props.isLoggedIn ?<LinkContainer to=\"/Home\">\n//     <Nav.Link>Home</Nav.Link>\n//   </LinkContainer>:<LinkContainer to=\"/\">\n// <Nav.Link>Home</Nav.Link>\n// </LinkContainer>}\n// {props.isLoggedIn ? <h1>Logged In</h1> : <h1>Not Logged In</h1>}\n\n// import * as actionCreators from \"../store/creators/actionCreators\";\n// import Form from \"react-bootstrap/Form\";\n// import FormControl from \"react-bootstrap/FormControl\";\n// import NavbarBrand from \"react-bootstrap/NavbarBrand\";\n// import \"./App.css\";\n// import logo from \"./logo.svg\";\n// import { NavLink } from \"react-router-dom\";\n","import React from \"react\";\n\nconst Footer = () => {\n  return <></>;\n};\n\nexport default Footer;\n","import React from \"react\";\n// import \"../App.css\";\nimport Header from \"./Header.layout\";\nimport Footer from \"./Footer.layout\";\n\nconst BaseLayout = (props) => {\n  return (\n    <>\n      <Header />\n      {props.children}\n      <Footer />\n    </>\n  );\n};\n\nexport default BaseLayout;\n","import React, { useState, useEffect } from \"react\";\n//import React from \"react\";\n\nfunction Edit(props) {\n  const [book, setBook] = useState({});\n\n  function handleUpdateBookPost() {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/edit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(book),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        alert(response.message);\n        props.history.push(\"/Home\");\n      });\n  }\n\n  function handleUpdateBook(e) {\n    setBook({\n      ...book,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  useEffect(() => {\n    fetch(\n      \"https://bookstrap-bookstore-server.herokuapp.com/edit/\" +\n        props.match.params.id\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        setBook(result);\n      });\n  }, [props.match.params.id]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={book.imageURL}\n        name=\"imageURL\"\n        onChange={handleUpdateBook}\n      ></input>\n      <input\n        type=\"text\"\n        value={book.title}\n        name=\"title\"\n        onChange={handleUpdateBook}\n      ></input>\n      <input\n        type=\"text\"\n        value={book.genre}\n        name=\"genre\"\n        onChange={handleUpdateBook}\n      ></input>\n      <input\n        type=\"text\"\n        value={book.publisher}\n        name=\"publisher\"\n        onChange={handleUpdateBook}\n      ></input>\n      <input\n        type=\"text\"\n        value={book.year}\n        name=\"year\"\n        onChange={handleUpdateBook}\n      ></input>\n      <button onClick={handleUpdateBookPost}>Update Book</button>\n    </div>\n  );\n}\n\nexport default Edit;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/creators/actionCreators\";\n\nconst BootstrapCardCart = (props) => {\n  const handleRemoveCartBook = () => {\n    let cartBook = props.books;\n    console.log(props);\n    props.onDecrement();\n    props.onRemoveCartBooks(cartBook);\n  };\n\n  return (\n    <>\n      <div>\n        <Card id={props.books.id}>\n          <Card.Img\n            style={{ width: 200 }}\n            variant=\"top\"\n            src={props.books.imageURL}\n            alt=\"image\"\n          />\n          <Card.Body>\n            <Card.Title>{props.books.title}</Card.Title>\n            <Card.Text>\n              {props.books.genre}\n              <br />\n              {props.books.publisher}\n              <br />\n              {props.books.year}\n            </Card.Text>\n          </Card.Body>\n\n          {props.isLoggedIn ? (\n            <Card.Footer>\n              <small className=\"text-muted\">\n                <Nav.Link>\n                  <button onClick={handleRemoveCartBook}>\n                    Remove From Cart\n                  </button>\n                </Nav.Link>\n              </small>\n            </Card.Footer>\n          ) : null}\n        </Card>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.loginRed.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDecrement: () => dispatch(actionCreators.decrementCounter()),\n    onRemoveCartBooks: (cartBooks) =>\n      dispatch(actionCreators.removeCartBooks(cartBooks)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BootstrapCardCart);\n","import React from \"react\";\nimport BootstrapCardCart from \"../components/BootstrapCardCart.component\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport { connect } from \"react-redux\";\n// import * as actionCreators from \"../store/creators/actionCreators\";\n// import BootstrapCard from \"./components/BootstrapCard.component\";\n// import Button from \"react-bootstrap/Button\";\n// const [books, setBooks] = useState([]);\n\nfunction CartBooks(props) {\n  // const [cartBooks, setCartBooks] = useState([]);\n  // let fetchDisplayBooks = () => {\n  //   let displayBooks = props.books.filter((book) => book.id == \"4\");\n\n  //   setDisplayBooks(displayBooks);\n  // };\n\n  // const fetchDisplayBooks = () => {\n  // }\n\n  // useEffect(() => {\n  //   console.log(props); // fetchDisplayBooks();\n  // }, []);\n\n  return (\n    <>\n      <div className=\"App container\">\n        <CardDeck>\n          {props.cartBooks.map((bookLoop, index) => {\n            return <BootstrapCardCart key={index} books={bookLoop} />;\n          })}\n        </CardDeck>\n      </div>\n    </>\n  );\n}\n//   return (\n//     <>\n//       <button onClick={fetchCartBooks}>fectch cart</button>\n//       <div className=\"App container\">\n//         {booksDisplay.length > 0 ? <h1>Hello</h1> : null}\n//         <CardDeck>\n//           {/* {cartBooks.length > 0 ? ({cartBooks.map((cartBookLoop, index) => {\n//             return (\n//               <BootstrapCardCartBooks\n//                 key={index}\n//                 cartBooks={cartBookLoop}\n//                 fetchBooks={fetchBooks}\n//               />\n//             );\n//           })}): null} */}\n//         </CardDeck>\n//       </div>\n//     </>\n//   );\n// }\n\nconst mapStateToProps = (state) => {\n  return {\n    cartBooks: state.cartRed.cartBooks,\n    // books: state.booksRed.books,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // onIncrement: () => dispatch(actionCreators.incrementCounter()),\n//     // onDecrement: () => dispatch(actionCreators.decrementCounter()),\n//     onAddGlobalBooks: (books) => dispatch(actionCreators.addGlobalBooks(books)),\n//     // onCartBooks: (id) => dispatch(actionCreators.addCartBooks(id)),\n//   };\n// };\n\n//export default CartBooks;\n\nexport default connect(mapStateToProps, null)(CartBooks);\n\n// let fetchBooks = () => {\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/\")\n//     .then((response) => response.json())\n//     .then((result) => {\n//       setBooks(result);\n//     });\n// };\n\n// function CartBooks(props) {\n//   const [books, setBooks] = useState([]);\n//   let fetchCartBooks = () => {\n//     fetch(\"https://bookstrap-bookstore-server.herokuapp.com/cart\")\n//       .then((response) => response.json())\n//       .then((result) => {\n//         setCartBooks(result);\n//         // props.onAddBooksToGlobalState(result);\n//       });\n//   };\n\n// const [booksDisplay, setBooksDisplay] = useState([]);\n\n// useEffect(() => {\n//   fetchBooks();\n// }, []);\n\n// const fetchBooks = () => {\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/\")\n//     .then((response) => response.json())\n//     .then((result) => {\n//       setBooks(result);\n//       // props.onCartBooks(result);\n//     });\n//   // .then(() => {\n//   //   fetchCartBooks();\n//   // });\n// };\n","import axios from \"axios\";\n\nexport function setAuthenticationHeader(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/creators/actionCreators\";\nimport axios from \"axios\";\nimport { setAuthenticationHeader } from \"../utils/Auth\";\n\nfunction Login(props) {\n  const [user, setUser] = useState({});\n  const [guestUser] = useState({\n    username: \"David\",\n    password: \"1234\",\n  });\n\n  function handleLogin(e) {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function guestLoginPost() {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(guestUser),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.success) {\n          props.onAuthenticated(true);\n          alert(response.message);\n          props.history.push(\"/\");\n        } else {\n          alert(response.message);\n          setUser({\n            ...user,\n            password: \"\",\n          });\n        }\n      });\n  }\n\n  function handleLoginPost() {\n    axios\n      .post(\"https://bookstrap-bookstore-server.herokuapp.com/api/login\", {\n        username: user.username,\n        password: user.password,\n      })\n      .then((response) => {\n        if (response.data.success) {\n          const token = response.data.token;\n          localStorage.setItem(\"jsonwebtoken\", token);\n          setAuthenticationHeader(token);\n          console.log(token);\n          props.onAuthenticated(true);\n          alert(response.data.message);\n          props.history.push(\"/\");\n        } else {\n          alert(response.data.message);\n          alert(\"response failed\");\n          setUser({\n            ...user,\n            password: \"\",\n          });\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>Login Page</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n          onChange={handleLogin}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          onChange={handleLogin}\n          required\n        />\n        <button onClick={handleLoginPost}>Login</button>\n      </div>\n      <div>\n        <button onClick={guestLoginPost}>Guest Login</button>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: () => dispatch(actionCreators.authenticated(true)),\n  };\n};\n// export default Login;\nexport default connect(null, mapDispatchToProps)(Login);\n\n// const[email, setEmail] = useState(\"\")\n// const[password, setPassword] = useState(\"\")\n\n// function handleLogin(e) {\n//   setUser({\n//     ...user,\n//     [e.target.name]: e.target.value,\n//   });\n// }\n\n// const fetchLoginUser = () => {\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/login\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(user),\n//   })\n//     .then((res) => res.json())\n//     .then((response) => {\n//       alert(response.message);\n//       // props.history.push(\"/Register\");\n//     });\n\n//   function handleLoginPost() {\n//     fetchLoginUser();\n//     props.onAuthenticated(true);\n//   }\n\n// const [username, setUsername] = useState(\"\");\n// const [password, setPassword] = useState(\"\");\n\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/login\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(user),\n//   })\n//     .then((res) => res.json())\n//     .then((response) => {\n//       if (response.success) {\n//         props.onAuthenticated(true);\n//         alert(response.message);\n//         props.history.push(\"/\");\n//       } else {\n//         alert(response.message);\n//         setUser({\n//           ...user,\n//           password: \"\",\n//         });\n//       }\n//     });\n// }\n\n// const handleJWTLogin = () => {\n//   // perform a fetch request and pass username and password\n//   // to the server\n\n//   fetch(\"https://bookstrap-bookstore-server.herokuapp.com/api/login\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(user),\n//   })\n//     .then((response) => response.json())\n//     .then((result) => {\n//       if (result.success) {\n//         // save the token in local storage\n//         localStorage.setItem(\"jsonwebtoken\", result.token);\n//       } else {\n//         // print out a message saying login failed\n//       }\n//     });\n// };\n\n//import { LinkContainer } from \"react-router-bootstrap\";\n// import BootstrapCard from \"./components/BootstrapCard.component\";\n// import Button from \"react-bootstrap/Button\";\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapCardNoAuth from \"../components/BootstrapCardNoAuth.component\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n//import { connect } from \"react-redux\";\n//import * as actionCreators from \"../store/creators/actionCreators\";\n\nfunction HomeNoAuth() {\n  const [books, setBooks] = useState([]);\n  // const [cartBooks, setCartBooks] = useState([]);\n  let fetchBooks = () => {\n    fetch(\"https://bookstrap-bookstore-server.herokuapp.com/\")\n      .then((response) => response.json())\n      .then((result) => {\n        // props.onAddGlobalBooks(result);\n        setBooks(result);\n        // console.log(result);\n      });\n  };\n\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return (\n    <>\n      <div className=\"App container\">\n        <CardDeck>\n          {books.map((bookLoop, index) => {\n            return (\n              <BootstrapCardNoAuth\n                key={index}\n                books={bookLoop}\n                fetchBooks={fetchBooks}\n              />\n            );\n          })}\n        </CardDeck>\n      </div>\n    </>\n  );\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     //     counter: state.counterRed.counter,\n//     //     isLoggedIn: state.loginRed.isLoggedIn,\n//     // books: state.booksRed.books,\n//     // cartBooks: state.cartRed.cartBooks,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // onIncrement: () => dispatch(actionCreators.incrementCounter()),\n//     // onDecrement: () => dispatch(actionCreators.decrementCounter()),\n//     //onAuthenticated: () => dispatch(actionCreators.authenticated()),\n//     //onAddGlobalBooks: (books) => dispatch(actionCreators.addGlobalBooks(books)),\n//   };\n// };\nexport default HomeNoAuth;\n// export default connect(mapDispatchToProps, null)(HomeNoAuth);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../store/creators/actionCreators\";\n\nfunction Signout(props) {\n  // const [user, setUser] = useState({});\n  props.onAuthenticated(false);\n\n  return (\n    <div>\n      <h1>You are signed out!</h1>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: () => dispatch(actionCreators.authenticated(false)),\n  };\n};\n// export default Signout;\nexport default connect(null, mapDispatchToProps)(Signout);\n\n//   function handleLogin(e) {\n//   setUser({\n//     ...user,\n//     [e.target.name]: e.target.value,\n//     // setUsername(e.target.value);\n//   });\n// }\n\n//   function handleLoginPost() {\n//     fetch(\"https://bookstrap-bookstore-server.herokuapp.com/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(user),\n//     })\n//       .then((res) => res.json())\n//       .then((response) => {\n//         alert(response.message);\n//     props.history.push(\"/Home\");\n//   });\n\n// import BootstrapCard from \"./components/BootstrapCard.component\";\n// import Button from \"react-bootstrap/Button\";\n// import React, { useState } from \"react\";\n","// import * as actionCreators from \"../store/creators/actionCreators\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\n// higher order components\nexport default function (ComposedComponent) {\n  class Authenticate extends Component {\n    constructor(props) {\n      super(props);\n\n      // if the user is NOT authenticated then\n      if (this.props.isLoggedIn === false) {\n        // send the user to the login component\n        this.props.history.push(\"/\");\n      }\n    }\n    render() {\n      return <ComposedComponent {...this.props} />;\n    }\n  }\n  const mapStateToProps = (state) => {\n    return {\n      isLoggedIn: state.isLoggedIn,\n    };\n  };\n  return connect(mapStateToProps)(Authenticate);\n}\n// const mapStateToProps = (dispatch) => {\n//   return {\n//     onAuthenticated: () => dispatch(actionCreators.authenticated(true)),\n//   };\n// };\n\n// return connect(null, mapStateToProps)(Authenticate);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  cartBooks: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADDCARTBOOKS: {\n      return {\n        ...state,\n        cartBooks: state.cartBooks.concat(action.payload),\n      };\n    }\n    case actionTypes.REMOVECARTBOOKS: {\n      return {\n        ...state,\n        cartBooks: state.cartBooks.filter((book) => {\n          return book.id !== action.payload.id;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isLoggedIn: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHENTICATED: {\n      return {\n        ...state,\n        isLoggedIn: action.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// const reducer = (state = initialState, action) => {\n//   if (action.type == actionTypes.AUTHENTICATED) {\n//     return {\n//       ...state,\n//       isLoggedIn: action.value,\n//     };\n//   }\n\n//   return state;\n// };\n\n// export default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  books: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADDGLOBALBOOKS: {\n      return {\n        ...state,\n        books: state.books.concat(action.payload),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// const reducer = (state = initialState, action) => {\n//   if (action.type == actionTypes.ADDGLOBALBOOKS) {\n//     return {\n//       ...state,\n//       books: state.books.concat(action.payload),\n//     };\n//   }\n\n//   return state;\n// };\n\n// export default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  counter: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD: {\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    }\n    case actionTypes.REMOVE: {\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n// const reducer = (state = initialState, action) => {\n//   if (action.type == actionTypes.ADD) {\n//     return {\n//       ...state,\n//       counter: state.counter + 1,\n//     };\n//   } else if (action.type == actionTypes.REMOVE) {\n//     return {\n//       ...state,\n//       counter: state.counter - 1,\n//     };\n//   }\n\n//   return state;\n// };\n\n// export default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport Register from \"./Pages/Register.page\";\nimport AddBook from \"./Pages/AddBook.page\";\nimport Fiction from \"./Pages/Fiction.page\";\nimport Nonfiction from \"./Pages/Nonfiction.page\";\nimport AllGenres from \"./Pages/AllGenres.page\";\nimport BaseLayout from \"./Layout/BaseLayout.layout\";\nimport Edit from \"./Pages/Edit.page\";\nimport Cart from \"./Pages/Cart.page\";\nimport Login from \"./Pages/Login.page\";\nimport HomeNoAuth from \"./Pages/HomeNoAuth.page\";\nimport Signout from \"./Pages/Signout.page\";\nimport { setAuthenticationHeader } from \"./utils/Auth\";\nimport requireAuth from \"./components/requireAuth\";\n\nimport cartReducer from \"./store/reducers/cart\";\nimport loginReducer from \"./store/reducers/login\";\nimport booksReducer from \"./store/reducers/books\";\nimport counterReducer from \"./store/reducers/counter\";\n\nconst rootReducer = combineReducers({\n  cartRed: cartReducer,\n  loginRed: loginReducer,\n  booksRed: booksReducer,\n  counterRed: counterReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// create a global store\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst token = localStorage.getItem(\"jsonwebtoken\");\nsetAuthenticationHeader(token);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <BaseLayout>\n          <Switch>\n            <Route exact path=\"/\" component={HomeNoAuth} />\n            <Route exact path=\"/AddBook\" component={requireAuth(AddBook)} />\n            <Route exact path=\"/Edit/:id\" component={requireAuth(Edit)} />\n            {/* <Route exact path=\"/AddBook\" component={AddBook} />\n            <Route exact path=\"/Edit/:id\" component={Edit} /> */}\n            <Route exact path=\"/Register\" component={Register} />\n            <Route exact path=\"/Fiction\" component={Fiction} />\n            <Route exact path=\"/Nonfiction\" component={Nonfiction} />\n            <Route exact path=\"/AllGenres\" component={AllGenres} />\n            <Route exact path=\"/Cart\" component={requireAuth(Cart)} />\n            {/* <Route exact path=\"/Cart\" component={Cart} /> */}\n            <Route exact path=\"/Login\" component={Login} />\n            <Route exact path=\"/Home\" component={HomeNoAuth} />\n            <Route exact path=\"/Signout\" component={Signout} />\n          </Switch>\n        </BaseLayout>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n/* <Route path=\"/\" component={Login} exact />\n<Route path=\"/my-books\" component={requireAuth(MyBooks)} />\n<Route path=\"/admin\" component={requireAuth(Admin)} /> */\n","module.exports = __webpack_public_path__ + \"static/media/logo-bootstrap.83fe61b0.svg\";"],"sourceRoot":""}